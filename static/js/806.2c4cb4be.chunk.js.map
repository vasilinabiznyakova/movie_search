{"version":3,"file":"static/js/806.2c4cb4be.chunk.js","mappings":"mLAEaA,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OAAO,uBAAIA,GACZ,C,4ICFYC,EAAaC,EAAAA,GAAAA,EAAH,8CAIVC,EAAOD,EAAAA,GAAAA,GAAH,uDAGJE,EAAWF,EAAAA,GAAAA,GAAH,mF,SCkCrB,EArCgB,WACd,OAA4CG,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GACZI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPV,EAAkBU,EAAKC,SACvBT,EAAU,WACX,IACAU,OAAM,SAAAT,GACLC,EAASD,GACTD,EAAU,WACX,GACJ,GAAE,CAACG,KAGF,2BACc,aAAXJ,IAAyB,SAACT,EAAA,EAAD,CAAWC,QAASU,EAAMV,UACxC,aAAXQ,GAAyBF,EAAec,OAAS,GAChD,SAACjB,EAAD,UACGG,EAAee,KAAI,SAACC,EAAKC,GAAN,OAClB,UAACnB,EAAD,YACE,UAACH,EAAD,sBAAqBqB,EAAIE,WACzB,uBAAIF,EAAIG,YAFKF,EADG,OAQtB,sEAIP,C,8LCvCKG,EAAW,gCACXC,EAAM,mCAECC,EAAgB,mCAAG,oGACZC,EAAAA,GAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IADxC,cACxBG,EADwB,yBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAW,mCAAG,WAAMnB,GAAN,uFACPiB,EAAAA,GAAAA,IAAA,UAAaH,EAAb,iBAA8Bd,EAA9B,oBAAiDe,IAD1C,cACnBG,EADmB,yBAElBA,GAFkB,2CAAH,sDAKXE,EAAW,mCAAG,WAAMpB,GAAN,uFACPiB,EAAAA,GAAAA,IAAA,UACbH,EADa,iBACId,EADJ,4BAC+Be,IAFxB,cACnBG,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOXf,EAAc,mCAAG,WAAMH,GAAN,uFACViB,EAAAA,GAAAA,IAAA,UACbH,EADa,iBACId,EADJ,4BAC+Be,IAFrB,cACtBG,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdG,EAAc,mCAAG,WAAMC,GAAN,uFACVL,EAAAA,GAAAA,IAAA,UACbH,EADa,iCACoBC,EADpB,kBACiCO,EADjC,YADU,cACtBJ,EADsB,yBAIrBA,GAJqB,2CAAH,qD","sources":["components/ErrorView/ErrorView.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/API.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ErrorView = ({ message }) => {\n  return <b>{message}</b>;\n};\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const AuthorName = styled.p`\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  border-top: 2px solid grey;\n`;\nexport const ListItem = styled.li`\n  border-bottom: 1px solid grey;\n  padding-bottom: 12px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviewsById } from '../../services/API';\nimport { ErrorView } from '../ErrorView/ErrorView';\nimport { AuthorName, List, ListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [selectedReview, setSelectedReview] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewsById(movieId)\n      .then(({ data }) => {\n        setSelectedReview(data.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'rejected' && <ErrorView message={error.message} />}\n      {status === 'resolved' && selectedReview.length > 0 ? (\n        <List>\n          {selectedReview.map((rev, index) => (\n            <ListItem key={index}>\n              <AuthorName>Author: {rev.author}</AuthorName>\n              <p>{rev.content}</p>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>We do not have any reviews for this film</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0322adb5b7f04b7c7a36cb76430c0728';\n\nexport const getTrendingFilms = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n  return res;\n};\n\nexport const getFilmById = async movieId => {\n  const res = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}`);\n  return res;\n};\n\nexport const getCastById = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getReviewsById = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getFilmByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return res;\n};\n"],"names":["ErrorView","message","AuthorName","styled","List","ListItem","useState","selectedReview","setSelectedReview","status","setStatus","error","setError","movieId","useParams","useEffect","getReviewsById","then","data","results","catch","length","map","rev","index","author","content","BASE_URL","KEY","getTrendingFilms","axios","res","getFilmById","getCastById","getFilmByQuery","query"],"sourceRoot":""}
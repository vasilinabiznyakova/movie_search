{"version":3,"file":"static/js/266.23c8fd3e.chunk.js","mappings":"mLAEaA,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OAAO,uBAAIA,GACZ,C,uFCFYC,E,OAAWC,GAAAA,GAAH,iF,SCERC,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,SAACR,EAAD,WACE,SAAC,KAAD,CAAMS,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFUC,EADN,KAShB,C,uFCkBD,UA9Ba,WACX,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRH,EAAU,YACVI,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJ,IAAMT,EAAeS,EAAQC,KAAKD,QAClCR,EAAgBD,GAEhBG,EAAU,WACX,IACAQ,OAAM,SAAAP,GACLC,EAASD,GACTD,EAAU,WACX,GACJ,GAAE,KAGD,4BACE,2CACY,aAAXD,IAAyB,SAAC,IAAD,CAAWhB,QAASkB,EAAMlB,UACxC,YAAXgB,IAAwB,mCACb,aAAXA,IAAyB,SAAC,IAAD,CAAUZ,MAAOU,MAGhD,C,8LC/BKY,EAAW,gCACXC,EAAM,mCAECN,EAAgB,mCAAG,oGACZO,EAAAA,GAAAA,IAAA,UAAaF,EAAb,uCAAoDC,IADxC,cACxBE,EADwB,yBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAW,mCAAG,WAAMC,GAAN,uFACPH,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BK,EAA9B,oBAAiDJ,IAD1C,cACnBE,EADmB,yBAElBA,GAFkB,2CAAH,sDAKXG,EAAW,mCAAG,WAAMD,GAAN,uFACPH,EAAAA,GAAAA,IAAA,UACbF,EADa,iBACIK,EADJ,4BAC+BJ,IAFxB,cACnBE,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOXI,EAAc,mCAAG,WAAMF,GAAN,uFACVH,EAAAA,GAAAA,IAAA,UACbF,EADa,iBACIK,EADJ,4BAC+BJ,IAFrB,cACtBE,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdK,EAAc,mCAAG,WAAMC,GAAN,uFACVP,EAAAA,GAAAA,IAAA,UACbF,EADa,iCACoBC,EADpB,kBACiCQ,EADjC,YADU,cACtBN,EADsB,yBAIrBA,GAJqB,2CAAH,qD","sources":["components/ErrorView/ErrorView.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","pages/Home.js","services/API.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ErrorView = ({ message }) => {\n  return <b>{message}</b>;\n};\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  &&: not(: last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ListItem } from './FilmList.styled';\nimport PropTypes from 'prop-types';\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(({ title, id }) => (\n        <ListItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </ListItem>\n      ))}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { getTrendingFilms } from '../services/API';\nimport { useState, useEffect } from 'react';\nimport { ErrorView } from '../components/ErrorView/ErrorView';\nimport { FilmList } from '../components/FilmList/FilmList';\n\nconst Home = () => {\n  const [popularFilms, setPopularFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('pending');\n    getTrendingFilms()\n      .then(results => {\n        const popularFilms = results.data.results;\n        setPopularFilms(popularFilms);\n\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {status === 'rejected' && <ErrorView message={error.message} />}\n      {status === 'pending' && <p>Loading</p>}\n      {status === 'resolved' && <FilmList films={popularFilms} />}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0322adb5b7f04b7c7a36cb76430c0728';\n\nexport const getTrendingFilms = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n  return res;\n};\n\nexport const getFilmById = async movieId => {\n  const res = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}`);\n  return res;\n};\n\nexport const getCastById = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getReviewsById = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getFilmByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return res;\n};\n"],"names":["ErrorView","message","ListItem","styled","FilmList","films","location","useLocation","map","title","id","to","state","from","useState","popularFilms","setPopularFilms","status","setStatus","error","setError","useEffect","getTrendingFilms","then","results","data","catch","BASE_URL","KEY","axios","res","getFilmById","movieId","getCastById","getReviewsById","getFilmByQuery","query"],"sourceRoot":""}
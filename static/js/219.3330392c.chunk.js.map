{"version":3,"file":"static/js/219.3330392c.chunk.js","mappings":"4PAEaA,EAAOC,EAAAA,GAAAA,EAAH,8CAIJC,EAAOD,EAAAA,GAAAA,GAAH,uDAGJE,EAAWF,EAAAA,GAAAA,GAAH,mF,SCuCrB,EA3Ca,WACX,OAAwCG,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GACTI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPV,EAAgBU,EAAKC,MACrBT,EAAU,WACX,IACAU,OAAM,SAAAT,GACLC,EAASD,GACTD,EAAU,WACX,GACJ,GAAE,CAACG,KAEF,2BACc,aAAXJ,IAAyB,SAACY,EAAA,EAAD,CAAWC,QAASX,EAAMW,UACxC,aAAXb,IACC,SAACL,EAAD,UACGG,EAAagB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OAChB,UAACtB,EAAD,YACE,SAACH,EAAD,UAAOuB,KAEP,uCAAeC,KACdC,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,EACLK,MAAM,MACNC,OAAO,UATEP,EADC,QAmB3B,C,mEC5CYH,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OAAO,uBAAIA,GACZ,C,8LCFKU,EAAW,gCACXC,EAAM,mCAECC,EAAgB,mCAAG,oGACZC,EAAAA,GAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IADxC,cACxBG,EADwB,yBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAW,mCAAG,WAAMxB,GAAN,uFACPsB,EAAAA,GAAAA,IAAA,UAAaH,EAAb,iBAA8BnB,EAA9B,oBAAiDoB,IAD1C,cACnBG,EADmB,yBAElBA,GAFkB,2CAAH,sDAKXpB,EAAW,mCAAG,WAAMH,GAAN,uFACPsB,EAAAA,GAAAA,IAAA,UACbH,EADa,iBACInB,EADJ,4BAC+BoB,IAFxB,cACnBG,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOXE,EAAc,mCAAG,WAAMzB,GAAN,uFACVsB,EAAAA,GAAAA,IAAA,UACbH,EADa,iBACInB,EADJ,4BAC+BoB,IAFrB,cACtBG,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdG,EAAc,mCAAG,WAAMC,GAAN,uFACVL,EAAAA,GAAAA,IAAA,UACbH,EADa,iCACoBC,EADpB,kBACiCO,EADjC,YADU,cACtBJ,EADsB,yBAIrBA,GAJqB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/ErrorView/ErrorView.js","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  border-top: 2px solid grey;\n`;\nexport const ListItem = styled.li`\n  border-bottom: 1px solid grey;\n  padding-bottom: 12px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCastById } from '../../services/API';\nimport { ErrorView } from '../ErrorView/ErrorView';\nimport { Name, List, ListItem } from './Cast.styled';\nconst Cast = () => {\n  const [selectedCast, setSelectedCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastById(movieId)\n      .then(({ data }) => {\n        setSelectedCast(data.cast);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n  return (\n    <div>\n      {status === 'rejected' && <ErrorView message={error.message} />}\n      {status === 'resolved' && (\n        <List>\n          {selectedCast.map(({ id, name, character, profile_path }) => (\n            <ListItem key={id}>\n              <Name>{name}</Name>\n\n              <p>Character: {character}</p>\n              {profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  alt={name}\n                  width=\"100\"\n                  height=\"150\"\n                ></img>\n              )}\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import PropTypes from 'prop-types';\n\nexport const ErrorView = ({ message }) => {\n  return <b>{message}</b>;\n};\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0322adb5b7f04b7c7a36cb76430c0728';\n\nexport const getTrendingFilms = async () => {\n  const res = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n  return res;\n};\n\nexport const getFilmById = async movieId => {\n  const res = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}`);\n  return res;\n};\n\nexport const getCastById = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getReviewsById = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getFilmByQuery = async query => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1`\n  );\n  return res;\n};\n"],"names":["Name","styled","List","ListItem","useState","selectedCast","setSelectedCast","status","setStatus","error","setError","movieId","useParams","useEffect","getCastById","then","data","cast","catch","ErrorView","message","map","id","name","character","profile_path","src","alt","width","height","BASE_URL","KEY","getTrendingFilms","axios","res","getFilmById","getReviewsById","getFilmByQuery","query"],"sourceRoot":""}